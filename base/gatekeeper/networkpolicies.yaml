apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-egress
spec:
  policyTypes:
  - Egress
  podSelector: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-ingress
spec:
  policyTypes:
  - Ingress
  podSelector: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-coredns-egress
spec:
  policyTypes:
    - Egress
  podSelector: {}
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              networking/namespace: kube-system
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-same-namespace
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}
  egress:
    - to:
        - podSelector: {}
---
# kube-api
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: gatekeeper-kube-api-egress
spec:
  podSelector:
    matchLabels:
      app: gatekeeper-operator
  policyTypes:
    - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 172.18.28.0/22
    - ipBlock:
        cidr: 10.96.0.0/16
    ports:
      - protocol: TCP
        port: 443
      - protocol: TCP
        port: 6443 # kube-api
---
# http calls from kube-api
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kube-api-gatekeeper-ingress-443
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: gatekeeper-operator
  ingress:
  - from:
    - ipBlock:
        cidr: 172.18.28.0/22
    - ipBlock:
        cidr: 10.96.0.0/16
    - ipBlock:
        cidr: 192.168.0.0/16
    ports:
    - port: 443
      protocol: TCP
    - port: 8443
      protocol: TCP
